# DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
ERROR='\033[0;31m'
WARNING='\033[0;33m'
INFO='\033[0m'
DEFAULT='\033[0m'

function _feedback() {
  color="${1:-DEFAULT}"
  case "${1}" in
    ERROR)
      >&2 echo -e "${!color}${1}:  ${2}${DEFAULT}" ;;
    WARNING)
      >&2 echo -e "${!color}${1}:  ${2}${DEFAULT}" ;;
    *)
      echo -e "${!color}${1}:  ${2}${DEFAULT}" ;;
  esac
}

function process_security_tool_exit_status() {
  exit_code="${1}"
  security_tool="${2}"
  action="${3}"

  if [[ "${exit_code}" != 0 ]]; then
    _feedback ERROR "Failed ${security_tool} ${action}"
  else
    _feedback INFO "Passed ${security_tool} ${action}"
  fi

  # If the shell is not interactive, skip multiple runs by timestamping the touch file
  if [[ ! "${-}" =~ .*i.* ]]; then
    date +%s > "/${security_tool}_complete"
  fi

  return ${exit_code}
}

# DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
function terraform() {
  security_tool="tfsec"
  security_tool_args="/"
  action="recursive scan"
  security_tool_upper=$(echo "${security_tool}" | tr '[:lower:]' '[:upper:]')
  security_tool_argument="--skip-${security_tool}"
  security_tool_env_var="SKIP_${security_tool_upper}"

  if [[ "${1}" == "${security_tool_argument}" ]]; then
    _feedback WARNING "Skipping ${security_tool} due to ${security_tool_argument} argument"
    shift
  elif [[ "${!security_tool_env_var:-false}" == "true" ]]; then
    _feedback WARNING "Skipping ${security_tool} due to the ${security_tool_env_var} environment variable value"
  elif [[ -r "/${security_tool}_complete" ]]; then
    _feedback INFO "Skipping ${security_tool} because it was already run on $(date -d @$(cat /${security_tool}_complete))"
  else
    ${security_tool} ${security_tool_args} &>/dev/null
    process_security_tool_exit_status "${?}" "${security_tool}" "${action}"
    return=${?}
    if [[ ${return:-1} != 0 ]]; then
      return ${return}
    fi
  fi

  # Run the command per a PATH lookup, after any easy_infra specific arguments are removed
  command "${FUNCNAME[0]}" "$@"
}

